#!/usr/bin/env node

var port = Number(process.argv[2] || 3000)

var fs = require('fs')
var http = require('http');
var url = require('url');
var querystring = require('querystring');

var routes = {
  '/request': function(res, req) {
    res.writeHead(200, {'Content-Type': 'application/json'});
    var data = ''
    req.on('data', function(c) { data += c })
    req.on('end', function() {
      res.end(JSON.stringify({
        method: req.method,
        url: req.url,
        headers: req.headers,
        data: data
      }));
    })
  },
  '/secured': function (res, req) {
      if (req.headers.authorization == 'Bearer abc123') {
          res.writeHead(200, {'Content-Type': 'application/json'});
          res.end(JSON.stringify({data: 'foo'}));
      } else {
          res.writeHead(401, {'Content-Type': 'application/json', 'WWW-Authenticate': 'Bearer realm="example"'});
          res.end(JSON.stringify({error: "Not authenticated"}));
      }
  },
  '/token': function(res) {
    res.writeHead(200, {'Content-Type': 'application/json'});
    res.end(JSON.stringify({access_token: 'abc123', token_type: 'Bearer'}));
  },
  '/token/401': function(res) {
    res.writeHead(401, {'Content-Type': 'application/json', 'WWW-Authenticate': 'Bearer realm="example"'});
    res.end(JSON.stringify({error: "Not authenticated"}));
  },
  '/token/404': function(res) {
    res.writeHead(404, {'Content-Type': 'application/json'});
    res.end(JSON.stringify({error: 'Not found'}));
  },
  '/cookie': function(res, req) {
    var setCookie, cookie
    var params = querystring.parse(url.parse(req.url).query);
    if (params.name && params.value) {
      setCookie = [params.name, params.value].join('=');
    }
    if (params.name) {
      cookie = querystring.parse(req.headers['cookie'], '; ')[params.name];
    }
    res.writeHead(200, {'Content-Type': 'text/plain', 'Set-Cookie': setCookie});
    res.end(cookie);
  }
};

var types = {
  js: 'application/javascript',
  css: 'text/css',
  html: 'text/html',
  txt: 'text/plain'
};

http.createServer(function(req, res) {
  var pathname = url.parse(req.url).pathname;
  var route = routes[pathname];
  if (route) {
    route(res, req);
  } else {
    fs.readFile(__dirname + '/..' + pathname, function(err, data) {
      if (err) {
        res.writeHead(404, {'Content-Type': types.txt});
        res.end('Not Found');
      } else {
        var ext = (pathname.match(/\.([^\/]+)$/) || [])[1]
        res.writeHead(200, {'Content-Type': types[ext] || types.txt});
        res.end(data);
      }
    });
  }
}).listen(port);
